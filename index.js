require('dotenv').config();
const express=require('express');const axios=require('axios');const Papa=require('papaparse');
const PORT=process.env.PORT||3000;const SHEETS_CSV_URL=process.env.SHEETS_CSV_URL||'';
const DEBUG_YT=String(process.env.DEBUG_YT||'false').toLowerCase()==='true';
const REDIS_URL=process.env.REDIS_URL||'';const SESSION_TTL_SECONDS=parseInt(process.env.SESSION_TTL_SECONDS||'86400',10);
let redis=null;if(REDIS_URL){try{const IORedis=require('ioredis');redis=new IORedis(REDIS_URL,{lazyConnect:true});
redis.on('error',e=>console.error('[redis] error',e.message));redis.connect().catch(()=>{});console.log('[redis] enabled');}catch(e){console.error('[redis] not enabled:',e.message);}}
const stateByUser=new Map();async function loadSession(id){try{if(redis){const raw=await redis.get(`sess:${id}`);if(raw)return JSON.parse(raw);}}catch(e){console.error('[redis] load error',e.message);}return stateByUser.get(id)||{expecting:null,filters:{}}}
async function saveSession(id,st){try{if(redis)await redis.set(`sess:${id}`,JSON.stringify(st),'EX',SESSION_TTL_SECONDS);}catch(e){console.error('[redis] save error',e.message);}stateByUser.set(id,st)}
async function resetSession(id){try{if(redis)await redis.del(`sess:${id}`);}catch(e){console.error('[redis] del error',e.message);}stateByUser.delete(id)}
let cacheCsv={ts:0,items:[]};let lastFetchInfo={ts:0,url:SHEETS_CSV_URL,ok:false,error:null,contentType:null,head:null,length:0};
function normalizeEstado(v=''){const t=String(v||'').toLowerCase().trim();if(['disponible','yes','si','sí','available','true','1','ok'].includes(t))return'disponible';if(['no','ocupado','rentado','retirado','vendido','indisponible','false','0','n/a'].includes(t))return'no_disponible';return t||'no_disponible'}
async function fetchProperties(){const now=Date.now();if(now-cacheCsv.ts<60000&&cacheCsv.items.length)return cacheCsv.items;if(!SHEETS_CSV_URL)return[];try{const resp=await axios.get(SHEETS_CSV_URL,{timeout:10000});const csv=resp.data;const ct=(resp.headers&&(resp.headers['content-type']||resp.headers['Content-Type']))||'';lastFetchInfo={ts:now,url:SHEETS_CSV_URL,ok:true,error:null,contentType:ct,head:String(csv).slice(0,300),length:String(csv).length};const parsed=Papa.parse(csv,{header:true,skipEmptyLines:true});const rows=(parsed.data||[]).map(r=>{const get=k=>r[k]??r[k?.toUpperCase?.()]??r[k?.toLowerCase?.()];const codigo=get('codigo')??get('código')??get('Codigo')??get('Código');const yt=get('enlace youtube')??get('youtube')??get('enlace_youtube');const ficha=get('ENLACE FICHA TECNICA')??get('ficha')??get('enlace ficha tecnica');const hab=get('numero habitaciones')??get('habitaciones')??get('habs');const banos=get('numero banos')??get('baños')??get('banos');const parque=get('parqueadero')??get('parqueo')??get('parqueaderos');const canon=get('valor canon')??get('canon')??get('precio')??get('valor');const estado=(get('ESTADO')??get('estado')??'').toString();const tipo=get('TIPO')??get('tipo')??'';return{codigo:(codigo??'').toString().trim(),youtube:(yt??'').toString().trim(),ficha:(ficha??'').toString().trim(),habitaciones:parseInt((hab??'0').toString().replace(/\D/g,''))||0,banos:parseInt((banos??'0').toString().replace(/\D/g,''))||0,parqueadero:parseInt((parque??'0').toString().replace(/\D/g,''))||0,canon:(canon??'').toString().trim(),estado:estado.toLowerCase(),estadoNorm:normalizeEstado(estado),tipo:(tipo??'').toString().toLowerCase().trim(),};}).filter(r=>r.codigo);cacheCsv={ts:now,items:rows};return rows;}catch(e){lastFetchInfo={ts:now,url:SHEETS_CSV_URL,ok:false,error:e.message,contentType:null,head:null,length:0};return[];}}
function wantsReset(text=''){const t=String(text||'').toLowerCase();return['reset','reiniciar','/reset','/start','test'].some(k=>t.includes(k))}
function toNumber(x){const n=String(x||'').replace(/[^\d]/g,'');return n?parseInt(n,10):0}
function normalizaTipo(text=''){const t=String(text||'').toLowerCase();if(t.includes('apartamento'))return'apartamento';if(t.includes('casa'))return'casa';if(t.includes('apartaestudio')||t.includes('apartestudio'))return'apartaestudio';if(t.includes('local'))return'local';return''}
function extractCode(text,force=false){const d=String(text||'').match(/\d{1,4}/);return force&&!d?'':(d?d[0]:'')}
function renderProperty(p){let lines=[];lines.push(`🏠 Código ${p.codigo}${(p.estadoNorm||p.estado)!=='disponible'?' (no disponible)':''}`);if(p.tipo)lines.push(`Tipo: ${p.tipo}`);if(p.habitaciones)lines.push(`Habitaciones: ${p.habitaciones}`);if(p.banos)lines.push(`Baños: ${p.banos}`);if(p.parqueadero)lines.push(`Parqueaderos: ${p.parqueadero}`);if(p.canon)lines.push(`Canon: ${p.canon}`);if(p.ficha)lines.push(`📄 Ficha técnica: ${p.ficha}`);if(p.youtube)lines.push(`▶️ Video: ${p.youtube}`);return lines.join('\n')}
async function propertyByCodeLoose(code){const items=await fetchProperties();const target=String(code||'').trim();const targetDigits=target.replace(/\D/g,'');return items.find(p=>{const c=String(p.codigo||'').trim();if(!c)return false;if(c===target)return true;const cDigits=c.replace(/\D/g,'');return cDigits&&cDigits===targetDigits;});}
async function searchProperties({tipo='',presupuesto=0,habitaciones=0}={}){const items=await fetchProperties();const list=items.filter(p=>{if(tipo&&p.tipo&&p.tipo!==tipo)return false;if(habitaciones&&p.habitaciones<habitaciones)return false;const price=parseInt(String(p.canon||'').replace(/[^\d]/g,''))||0;if(presupuesto&&price&&price>presupuesto)return false;return(p.estadoNorm||p.estado)==='disponible'});return list.slice(0,5)}
function normalizeResponse(resp){try{const msgs=(resp&&resp.messages)?resp.messages:[];const texts=msgs.map(m=>(m&&m.text)?String(m.text):'').filter(Boolean);const joined=texts.slice(0,3).join('\n\n');return Object.assign({},resp,{respuesta:joined||''});}catch(e){return{respuesta:''}}}
async function handleWebhookPayload(payload){const{contact_id,user_name,text}=payload||{};const session=String(contact_id||user_name||'anon');const st=await loadSession(session);if(wantsReset(text)){await resetSession(session);return{messages:[{type:'text',text:'Contexto reiniciado. ¿Tienes código de inmueble o deseas buscar por filtros?'}],quick_replies:['Tengo código','Buscar por filtros'],context:{session_id:session,reset:true}}}
const code=extractCode(text,st.expecting==='code');if(code){const p=await propertyByCodeLoose(code);if(!p){st.expecting='code';await saveSession(session,st);return{messages:[{type:'text',text:`No encuentro el código ${code}. Verifica el número o intenta otro.`}],quick_replies:['Intentar otro código','Buscar por filtros'],context:{session_id:session}}}if(DEBUG_YT)console.log('[YOUTUBE_CHECK] webhook code=%s youtube=%s',code,p.youtube||'');if((p.estadoNorm||p.estado)!=='disponible'){return{messages:[{type:'text',text:`El código ${code} no está disponible ahora.`},{type:'text',text:`¿Deseas buscar por filtros para mostrarte opciones similares?`}],quick_replies:['Sí, buscar por filtros','Hablar con asesor'],context:{session_id:session}}}st.expecting=null;st.lastIntent='property_by_code';await saveSession(session,st);return{messages:[{type:'text',text:renderProperty(p)}],quick_replies:['Agendar visita','Ver más opciones','Hablar con asesor'],context:{session_id:session}}}
const t=(text||'').toLowerCase();if(t.includes('tengo codigo')||t.includes('tengo código')||t==='codigo'||t==='código'){st.expecting='code';await saveSession(session,st);return{messages:[{type:'text',text:'Perfecto, dime el código (1 a 4 dígitos).'}],context:{session_id:session}}}
if(t.includes('buscar por filtros')||t.includes('filtros')||st.expecting==='type'||st.expecting==='budget'||st.expecting==='rooms'){let tipo=st.filters.tipo||normalizaTipo(text);if(!tipo){st.expecting='type';await saveSession(session,st);return{messages:[{type:'text',text:'¿Qué tipo buscas? (casa, apartamento, apartaestudio o local)'}],context:{session_id:session}}}st.filters.tipo=tipo;await saveSession(session,st);if(!st.filters.presupuesto||st.expecting==='budget'){const pres=toNumber(text);if(pres){st.filters.presupuesto=pres;await saveSession(session,st);}else{st.expecting='budget';await saveSession(session,st);return{messages:[{type:'text',text:'¿Cuál es tu presupuesto máximo (en pesos)?'}],context:{session_id:session}}}}const necesitaHabs=!(st.filters.tipo==='apartaestudio'||st.filters.tipo==='local');if(necesitaHabs&&(!st.filters.habitaciones||st.expecting==='rooms')){const habs=toNumber(text);if(habs){st.filters.habitaciones=habs;await saveSession(session,st);}else{st.expecting='rooms';await saveSession(session,st);return{messages:[{type:'text',text:'¿Cuántas habitaciones mínimo?'}],context:{session_id:session}}}}const results=await searchProperties({tipo:st.filters.tipo,presupuesto:st.filters.presupuesto,habitaciones:necesitaHabs?st.filters.habitaciones:0});st.expecting=null;st.lastIntent='search_by_filters';await saveSession(session,st);if(!results.length){return{messages:[{type:'text',text:'No encontré inmuebles disponibles que coincidan con tu búsqueda.'},{type:'text',text:'¿Quieres ampliar el presupuesto (+10%) o cambiar de zona/tipo?'}],quick_replies:['Ampliar presupuesto','Cambiar tipo','Hablar con asesor'],context:{session_id:session}}}return{messages:results.map(p=>({type:'text',text:renderProperty(p)})),quick_replies:['Agendar visita','Ver más opciones','Hablar con asesor'],context:{session_id:session}}}
st.expecting=null;await saveSession(session,st);return{messages:[{type:'text',text:'¿Tienes código de inmueble o deseas buscar por filtros?'}],quick_replies:['Tengo código','Buscar por filtros','Hablar con asesor'],context:{session_id:session}}}
const app=express();app.use(express.json());
app.get('/health',(req,res)=>res.json({ok:true}));
app.get('/api/property',async(req,res)=>{try{const code=String(req.query.code||'').trim();const p=await propertyByCodeLoose(code);if(!p)return res.json({available:false,message:`No encuentro el código ${code}.`});if(DEBUG_YT)console.log('[YOUTUBE_CHECK] api code=%s youtube=%s',code,p.youtube||'');const available=(p.estadoNorm||p.estado)==='disponible';res.json({available,property:p,message:renderProperty(p),hasYoutube:!!p.youtube,youtube:p.youtube||''});}catch(e){res.status(500).json({error:e.message});}});
app.post('/api/search',async(req,res)=>{try{const{tipo='',presupuesto=0,habitaciones=0}=req.body||{};const results=await searchProperties({tipo,presupuesto,habitaciones});res.json({results});}catch(e){res.status(500).json({error:e.message});}});
app.post('/manychat/webhook',async(req,res)=>{try{const resp=await handleWebhookPayload(req.body||{});res.json(normalizeResponse(resp));}catch(e){res.status(500).json({error:e.message});}});
app.post('/api/chat',async(req,res)=>{try{const b=req.body||{};const text=b.text||b.pregunta||b.message||(b.input&&(b.input.text||b.input))||b.content||b.last_input||'';const payload={contact_id:b.contact_id||b.contact||b.user_id||b.session_id||b.contactId||b.userId||'anon',user_name:b.user_name||b.name||b.full_name||b.username||'',text};const resp=await handleWebhookPayload(payload);const norm=normalizeResponse(resp);res.json({respuesta:norm.respuesta});}catch(e){res.json({respuesta:''});}});
app.get('/api/debug/env',(req,res)=>res.json({SHEETS_CSV_URL}));
app.get('/api/debug/raw',async(req,res)=>{try{if(String(req.query.refresh||'')==='1'){cacheCsv={ts:0,items:[]};await fetchProperties();}res.json(lastFetchInfo);}catch(e){res.status(500).json({error:e.message});}});
app.get('/api/debug/codes',async(req,res)=>{try{const items=await fetchProperties();res.json({count:items.length,sample:items.slice(0,10).map(p=>p.codigo)});}catch(e){res.status(500).json({error:e.message});}});
app.get('/api/debug/peek',async(req,res)=>{try{const code=String(req.query.code||'').trim();const p=await propertyByCodeLoose(code);res.json({input:code,found:!!p,property:p||null});}catch(e){res.status(500).json({error:e.message});}});
app.listen(PORT,()=>console.log(`Server on :${PORT}`));
